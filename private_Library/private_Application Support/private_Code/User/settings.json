{
  "editor.fontWeight": 400,
  "editor.fontSize": 16,
  "editor.fontLigatures": false,
  "editor.fontFamily": "JetBrainsMono NerdFont, JetBrains Mono, Fira Code,  SF Mono, Source Code Pro, Menlo, Monaco, monospace",
  "editor.rulers": [78],
  // "editor.guides.indentation": false,
  "editor.lineNumbers": "off",
  "editor.guides.bracketPairs": true,
  "editor.renderLineHighlight": "line",
  "editor.wordWrapColumn": 78,
  "editor.wordWrap": "wordWrapColumn",
  "editor.autoClosingQuotes": "never",
  "editor.autoClosingBrackets": "never",
  "editor.autoClosingOvertype": "never",
  // "editor.semanticHighlighting.enabled": false,
  "editor.cursorStyle": "line",
  "editor.links": true,
  "editor.hover.enabled": false,
  "liveServer.settings.port": 0,
  "editor.lineHeight": 27,
  "editor.smoothScrolling": true,
  "editor.minimap.enabled": false,
  "breadcrumbs.enabled": true,
  "editor.renderControlCharacters": true,
  "files.defaultLanguage": "html",
  "git.ignoreMissingGitWarning": true,
  "editor.detectIndentation": false,
  "editor.folding": true,
  "editor.lightbulb.enabled": false,
  "editor.glyphMargin": false,
  // "editor.parameterHints.enabled": false,
  "terminal.integrated.fontSize": 16,
  "terminal.integrated.fontWeight": 400,
  "editor.renderWhitespace": "none",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,
  "security.workspace.trust.enabled": false,
  "editor.insertSpaces": true,
  "editor.linkedEditing": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairsHorizontal": true,
  "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?-",
  // "editor.inlayHints.enabled": "off",
  "editor.language.brackets": [],
  "editor.suggest.showClasses": true,
  "editor.lineDecorationsWidth" : 0,
  "editor.codeLens": false,

  "vim.easymotion": true,
  "vim.leader": "<space>",
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "d"],
      "after": ["d", "d"]
    },
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    {
      "before": ["K"],
      "commands": ["lineBreakInsert"],
      "silent": true
    }
  ],
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false
  },
  "editor.codeActionsOnSave": {},
  "editor.cursorBlinking": "solid",
  "workbench.iconTheme": "vscode-great-icons",
  "editor.suggest.showEnumMembers": false,
  "editor.suggest.showKeywords": false,
  "editor.suggest.showReferences": false,
  "editor.suggest.showTypeParameters": false,
  "workbench.editor.languageDetectionHints": {
    "untitledEditors": false,
    "notebookEditors": false
  },
  "html.suggest.html5": false,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "npm.keybindingsChangedWarningShown": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": false,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 0,
  "editor.tabSize": 2,
  "emmet.triggerExpansionOnTab": true,
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "open-in-browser.default": "Firefox",
  "window.menuBarVisibility": "toogle",
  "window.openFilesInNewWindow": "off",
  "window.openFoldersInNewWindow": "off",
  "window.newWindowDimensions": "maximized",
  "window.commandCenter": false,
  "explorer.enableDragAndDrop": true,

  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.autoReveal": false,
  "explorer.openEditors.visible": 0,
  "explorer.excludeGitIgnore": true,
  "git.confirmSync": false,
  "extensions.ignoreRecommendations": false,
  "breadcrums.enabled": true,
  "html.autoClosingTags": false,
  "gitlens.telemetry.enabled": false,
  "debug.node.autoAttach": "disabled",
  "scm.diffDecorations": "none",
  "vsicons.presets.foldersAllDefaultIcon": true,
  "vsicons.dontShowNewVersionMessage": true,
  "keyboard.dispatch": "keyCode",
  "security.workspace.trusc.untrustedFiles": "open",
  "workbench.startupEditor": "none",
  "workbench.tips.enabled": false,
  "workbench.editor.labelFormat": "short",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.untitled.hint": "hidden",
  "[python]": {
    "editor.formatOnType": true,
    "editor.tabSize": 4
  },
  // "editor.renderWhitespace": "all",
  "htmlhint.enable": true,
  "htmlhint.documentSelector": [
    "html",
    "htm"
  ],
  "htmlhint.options": {
    "tagname-lowercase": true,
    "attr-lowercase": true,
    "attr-value-double-quotes": true,
    "doctype-first": true,
    "tag-pair": true,
    "spec-char-escape": true,
    "id-unique": true,
    "src-not-empty": true,
    "attr-no-duplication": true,
    "title-require": true
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "terminal.integrated.lineHeight": 1.3,
  "workbench.colorCustomizations": {},
  "tabnine.experimentalAutoImports": true,

    // Controls if quick suggestions should show up while typing
    "editor.quickSuggestions": {
        "other": true,
        "comments": false,
        "strings": false
    },
     // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
    "editor.acceptSuggestionOnCommitCharacter": true,
    // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
    "editor.acceptSuggestionOnEnter": "on",
    // Controls the delay in ms after which quick suggestions will show up.
    "editor.quickSuggestionsDelay": 10,
    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": true,
    // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
    "editor.tabCompletion": "on",
    // Controls whether sorting favours words that appear close to the cursor
    "editor.suggest.localityBonus": true,
    // Controls how suggestions are pre-selected when showing the suggest list
    "editor.suggestSelection": "first",
    // Enable word based suggestions
    "editor.wordBasedSuggestions": true,
    // Enable parameter hints
    "editor.parameterHints.enabled": true,
    "workbench.colorTheme": "grigoryvp memory theme",
    "window.zoomLevel": 1,
}